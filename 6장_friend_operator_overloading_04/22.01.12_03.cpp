/* [22.01.12] 연산자 중복
동일한 연간 혹인 기호(+-/*)를 대상(피연산자)에 따라 서로 가른 의미로 해석하는 일종의 다형성(polymorphism)이다.

여러개 만들 수 있는 것이 함수 중복이라면, 피연산자에 따라 서로 다른 연산을 하도록
동일한 연산자를 중복해서 작성하는 것이 연산자 중복이다.

피연산자에 적합한 연산자를 새로 작성하면 프로그램이 보다 쉽게 표현된다.

연산자 중복의 특징
1. C++ 언어에 본래 있는 연산자만 중복 가능하다.
	(+,-,/,*,==,!=,%,&&) 등 본래부터 있는 C++ 연산자에 새로운 의미를 부여하는 것은 가능하나.
	%%, ## 등의 새로운 연산자를 만들어 낼 수 없다.

2. 연산자 중복은 피연산자의 타입이 다른 연산을 새로 정의하는 것이다.
	C++에서 기본 + 연산자의 피연산자는 모두 숫자이다.
	그러므로 + 연산자를 새로 중복하려면 객체+수 / 수+객체 / 객체+객체 와 같이 정수나 실수가 아닌 
	객체나 값을 더하는 + 연산이여야 한다. 

3. 연산자 중복은 함수를 통해 이루어진다.
	연산자 중복이란 새로운 연산 처리를 수행하는 함수를 구현하는 것이다.

4. 연산자 중복은 반드시 클래스와 관계를 가진다.
	중복된 연산자는 반드시 피연산자에 객체를 동반한다. 그러므로 연산자 함수를 클래스의 맴버 함수로 구현하든지,
	아니면 전역 함수로 구현하고 클래스에 프랜드 함수고 선언한다.
*/